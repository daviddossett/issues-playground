.editorContainer {
  width: 100%;
  height: 100%;
  min-height: 300px;
  overflow: hidden;
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  position: relative;
}

/* Override Monaco editor styles */
.editorContainer :global(.monaco-editor),
.editorContainer :global(.monaco-editor .margin),
.editorContainer :global(.monaco-editor-background) {
  background-color: transparent !important;
}

.editor {
  width: 100%;
  height: 100%;
  padding: 16px;
  color: var(--fgColor-default);
  background-color: var(--bgColor-default);
  font-size: 14px;
  line-height: 1.5;
  tab-size: 2;
  overflow: auto;
}

.placeholder {
  color: var(--fgColor-muted);
  user-select: none;
}

/* View transition animations */
.viewTransition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.splitView {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  height: 100%;
}

.codeView {
  width: 100%;
  height: 100%;
}

.previewView {
  width: 100%;
  height: 100%;
}

.hidden {
  opacity: 0;
  transform: translateX(-20px);
}

.visible {
  opacity: 1;
  transform: translateX(0);
}

.iterating {
  pointer-events: none;
}

.iterating::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  background-color: rgba(255, 255, 255, 0.5);
  filter: blur(8px);
  animation: focusPulse 3s infinite ease-in-out;
}

[data-color-mode="dark"] .iterating::before {
  background-color: rgba(0, 0, 0, 0.5);
}

@keyframes focusPulse {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.3;
  }
} 