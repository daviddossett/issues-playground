.inputGroup {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
}

.container {
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: 0 var(--base-size-16) var(--base-size-16) var(--base-size-16);
}

.contentArea {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  position: relative;
  scroll-behavior: smooth;
}

.activityLogContainer {
  padding: var(--base-size-16) 0;
  position: relative;
  display: flex;
  flex-direction: column;
  flex-grow: initial;
  gap: var(--base-size-4);
  padding-left: var(--base-size-24);
}

.activityLogContainer::before {
  content: "";
  position: absolute;
  left: 8px;
  top: 0px;
  bottom: var(--timeline-bottom, 32px);
  width: 1px;
  background-color: var(--borderColor-muted);
  transition: bottom 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition-delay: 0.2s;
}

.activityItem {
  position: relative;
  width: 100%;
  padding: var(--base-size-12) var(--base-size-16);
  border-radius: var(--borderRadius-medium);
  border: none;
  cursor: pointer;
  color: var(--fgColor-muted);
  background-color: transparent;
  font: var(--text-body-shorthand-medium);
  text-align: left;
  transition:
    background-color 0.15s ease,
    color 0.15s ease;
}

.activityItem:hover {
  background-color: var(--bgColor-muted);
  color: var(--fgColor-default);
}

.activityItemActive {
  cursor: default;
  border: none;
  color: var(--fgColor-default);
  background-color: var(--bgColor-muted);
  position: relative;
}

.activityItem::before {
  content: "";
  position: absolute;
  left: -20px;
  top: 50%;
  transform: translateY(-50%);
  width: 9px;
  height: 9px;
  background-color: var(--bgColor-neutral-emphasis);
  border-radius: 50%;
  transition: background-color 0.2s ease;
  box-shadow: 0 0 0 2px var(--bgColor-default);
}

.activityItemActive::before {
  background-color: var(--fgColor-accent);
  box-shadow: 0 0 0 2px var(--bgColor-accent-muted);
  width: 11px;
  height: 11px;
  left: -21px;
}

.refinement {
  width: 100%;
  white-space: pre-wrap;
  word-break: break-word;
  line-height: 1.4;
  text-align: left;
}

.changesCaption {
  color: var(--fgColor-muted);
  font-size: var(--text-caption-size);
  margin-top: 8px;
  display: flex;
  width: 100%;
  align-items: center;
  gap: 4px;
  position: relative;
  min-height: 20px;
  font-weight: var(--text-caption-weight);
  cursor: pointer;
  transition: color 0.2s ease;
}

.changesCaption:hover {
  color: var(--fgColor-default);
}

.changesCaptionIcon {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.changesCaptionIcon.expanded {
  transform: rotate(90deg);
}

.changesList {
  margin-top: 8px;
  padding: 8px 12px;
  border-radius: var(--borderRadius-medium);
  background-color: var(--bgColor-muted);
  border: 1px solid var(--borderColor-muted);
  font-size: var(--text-caption-size);
  color: var(--fgColor-muted);
  display: none;
}

.changesList.expanded {
  display: block;
}

.changesListItem {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 4px 0;
}

.changesListIcon {
  flex-shrink: 0;
  color: var(--fgColor-muted);
}

.refinementActive {
  color: var(--fgColor-default);
  position: relative;
}

.refinementActive::after {
  display: none;
}

.form {
  margin-top: 0;
  outline: 1px solid var(--borderColor-default);
  border-radius: var(--borderRadius-large);
  cursor: initial;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  position: relative;
  margin-top: -1px;
  background-color: var(--bgColor-default);
}

.form:focus-within {
  outline-color: var(--borderColor-accent-emphasis);
  outline-width: var(--borderWidth-thick);
  background-color: var(--bgColor-default);
}

.inputContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  position: relative;
}

.textarea {
  width: 100%;
  resize: none;
  max-height: 150px;
  overflow-y: auto;
  padding: var(--base-size-12) var(--base-size-16);
  border: none;
  background-color: transparent;
  font-family: inherit;
  font-size: var(--text-body-size-medium);
}

.textarea:focus {
  outline: none;
  border: none;
  box-shadow: none;
}

.inputActions {
  display: flex;
  padding: var(--base-size-8);
  align-self: flex-end;
  gap: var(--base-size-4);
}

.suggestionsContainer {
  outline: 1px solid var(--borderColor-default);
  border-radius: var(--borderRadius-large) var(--borderRadius-large) 0 0;
  overflow: hidden;
  margin-bottom: -8px;
  padding-bottom: var(--base-size-8);
  z-index: 0;
}

.suggestionsHeader {
  display: flex;
  gap: 4px;
  align-items: center;
  padding: var(--base-size-4) var(--base-size-8);
}

.suggestionsList {
  padding-top: 0 !important;
}

.suggestionsLabel {
  font: var(--text-body-shorthand-small);
  font-weight: var(--text-title-weight-small);
  color: var(--fgColor-muted);
}

.suggestionIcon {
  color: var(--button-star-iconColor);
}

.skeletonIcon {
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: var(--bgColor-neutral-muted);
  animation: pulse 1.5s ease-in-out infinite;
}

.skeletonText {
  width: 180px;
  height: 16px;
  border-radius: var(--borderRadius-medium);
  background: var(--bgColor-neutral-muted);
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.4;
  }
  100% {
    opacity: 1;
  }
}

.thinkingCaption {
  color: var(--fgColor-muted);
  font-size: var(--text-body-size-small);
  margin-top: 8px;
  display: block;
  position: relative;
  min-height: 20px;
  font-weight: var(--text-caption-weight);
  font-size: var(--text-caption-size);
  background-color: var(--fgColor-muted);
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  mask-image: linear-gradient(
    75deg,
    rgba(0, 0, 0, .4) 0%,
    rgba(0, 0, 0, 1) 50%,
    rgba(0, 0, 0, .4) 100%
  );
  mask-size: 200% 100%;
  mask-repeat: repeat;
  mask-position: 100% 0;
  animation: shimmer 1.3s infinite linear;
}

.thinkingCaption::after {
  content: none;
}

.thinkingCaption.messageExiting {
  animation: messageOut 0.2s cubic-bezier(0.33, 1, 0.68, 1) forwards;
}

.thinkingCaption:not(.messageExiting) {
  animation: 
    messageIn 0.2s cubic-bezier(0.33, 1, 0.68, 1) forwards,
    shimmer 1.3s infinite linear;
}

@keyframes messageIn {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes messageOut {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(-100%);
  }
}

@keyframes shimmer {
  0% {
    mask-position: 100% 0;
  }
  100% {
    mask-position: -100% 0;
  }
}

@media (prefers-reduced-motion: no-preference) {
  .thinkingCaption {
    font-weight: var(--text-caption-weight);
    font-size: var(--text-caption-size);
    background-color: var(--fgColor-muted);
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    mask-image: linear-gradient(
      75deg,
      rgba(0, 0, 0, .4) 0%,
      rgba(0, 0, 0, 1) 50%,
      rgba(0, 0, 0, .4) 100%
    );
    mask-size: 200% 100%;
    mask-repeat: repeat;
    mask-position: 100% 0;
    animation: 
      messageIn 0.2s cubic-bezier(0.33, 1, 0.68, 1) forwards,
      shimmer 2.0s infinite linear;
  }

  .thinkingCaption.messageExiting {
    animation: 
      messageOut 0.2s cubic-bezier(0.33, 1, 0.68, 1) forwards,
      shimmer 1.3s infinite linear;
  }
}

.sendButton.iterating {
  background-color: var(--bgColor-danger-muted) !important;
  color: var(--fgColor-danger) !important;
}

.sendButton.iterating:hover {
  background-color: var(--bgColor-danger-emphasis) !important;
  color: var(--fgColor-default) !important;
}

.activityItemActive.iterating {
  position: relative;
  z-index: 2;
}

.activityItemActive.iterating::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--borderRadius-medium);
  background: linear-gradient(90deg, 
    var(--borderColor-accent-emphasis) 0%,
    var(--borderColor-accent-muted) 20%,
    var(--borderColor-accent-emphasis) 40%,
    var(--borderColor-accent-muted) 60%,
    var(--borderColor-accent-emphasis) 100%
  );
  background-size: 200% 100%;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  padding: 1px;
  z-index: 1;
  pointer-events: none;
  animation: outlineRotate 5s linear infinite;
}

@keyframes outlineRotate {
  0% {
    background-position: 100% 0;
  }
  100% {
    background-position: -100% 0;
  }
}

.restoreButton {
  width: 100%;
  margin-top: 8px;
  font-size: var(--text-caption-size) !important;
  display: block;
}
